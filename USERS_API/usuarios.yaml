openapi: 3.0.0
info:
  title: API de Usuarios
  version: 1.0.0
  description: API para gestionar usuarios, perfiles y métodos de pago en nuestra plataforma de streaming

paths:
  /buscar:
    get:
      summary: Obtiene una lista de usuarios en base a un texto, ya sea en correo electrónico o nombre de usuario
      parameters:
        - in: query
          name: q
          required: true
          schema:
            type: string
          description: Texto para buscar el usuario
      responses:
        '200':
          description: Búsqueda realizada con éxito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'

  /usuarios:
    get:
      summary: Obtiene la lista de usuarios
      parameters:
        - in: query
          name: correoElectronico
          schema:
            type: string
        - in: query
          name: nombreUsuario
          schema:
            type: string
      responses:
        '200':
          description: Lista de usuarios obtenida con éxito
          content:
            application/json:    
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
    post:
      summary: Crea un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        '201':
          description: Usuario creado con éxito
        '400':
          description: Datos de usuario inválidos

  /usuarios/{usuarioId}:
    get:
      summary: Obtiene un usuario específico
      parameters:
        - in: path
          name: usuarioId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Usuario obtenido con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: Usuario no encontrado
    put:
      summary: Actualiza un usuario existente
      parameters:
        - in: path
          name: usuarioId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        '200':
          description: Usuario actualizado con éxito
        '400':
          description: Datos de usuario inválidos
        '404':
          description: Usuario no encontrado
    delete:
      summary: Elimina un usuario
      parameters:
        - in: path
          name: usuarioId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Usuario eliminado con éxito
        '404':
          description: Usuario no encontrado

  /usuarios/{usuarioId}/perfiles:
    get:
      summary: Obtiene los perfiles de un usuario
      parameters:
        - in: path
          name: usuarioId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Perfiles obtenidos con éxito
          content:
            application/json:    
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Perfil'
    post:
      summary: Crea un nuevo perfil para un usuario
      parameters:
        - in: path
          name: usuarioId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Perfil'
      responses:
        '201':
          description: Perfil creado con éxito
        '400':
          description: Datos de perfil inválidos

  /usuarios/{usuarioId}/perfiles/{perfilId}:
    get:
      summary: Obtiene un perfil específico de un usuario
      parameters:
        - in: path
          name: usuarioId
          required: true
          schema:
            type: integer
        - in: path
          name: perfilId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Perfil obtenido con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Perfil'
        '404':
          description: Perfil no encontrado
    put:
      summary: Actualiza un perfil existente
      parameters:
        - in: path
          name: usuarioId
          required: true
          schema:
            type: integer
        - in: path
          name: perfilId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Perfil'
      responses:
        '200':
          description: Perfil actualizado con éxito
        '400':
          description: Datos de perfil inválidos
        '404':
          description: Perfil no encontrado
    delete:
      summary: Elimina un perfil
      parameters:
        - in: path
          name: usuarioId
          required: true
          schema:
            type: integer
        - in: path
          name: perfilId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Perfil eliminado con éxito
        '404':
          description: Perfil no encontrado

  /usuarios/{usuarioId}/pago:
    get:
      summary: Obtiene el método de pago de un usuario
      parameters:
        - in: path
          name: usuarioId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Método de pago obtenido con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pago'
        '404':
          description: Método de pago no encontrado
    put:
      summary: Actualiza el método de pago de un usuario
      parameters:
        - in: path
          name: usuarioId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pago'
      responses:
        '200':
          description: Método de pago actualizado con éxito
        '400':
          description: Datos de pago inválidos
        '404':
          description: Usuario no encontrado
    delete:
      summary: Elimina el método de pago de un usuario
      parameters:
        - in: path
          name: usuarioId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Método de pago eliminado con éxito
        '404':
          description: Método de pago no encontrado

components:
  schemas:
    Usuario:
      type: object
      properties:
        id:
          type: integer
        correoElectronico:
          type: string
        contrasena:
          type: string
          format: password
        nombreUsuario:
          type: string
        perfiles:
          type: array
          items:
            $ref: '#/components/schemas/Perfil'
        metodoPago:
          $ref: '#/components/schemas/Pago'

    Perfil:
      type: object
      properties:
        id:
          type: integer
        nombre:
          type: string
        listaVisualizacionReciente:
          type: array
          items:
            type: integer
          description: Lista de IDs de contenidos visualizados recientemente
        miLista:
          type: array
          items:
            type: integer
          description: Lista de IDs de contenidos en "Mi lista"
        fotoPerfil:
          type: integer

    Pago:
      type: object
      properties:
        numeroTarjeta:
          type: string
        fechaCaducidad:
          type: string
        cvc:
          type: integer